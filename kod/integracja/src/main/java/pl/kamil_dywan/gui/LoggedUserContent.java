package pl.kamil_dywan.gui;

import pl.kamil_dywan.service.*;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

public class LoggedUserContent extends ChangeableGui {

    private JPanel mainPanel;

    private JTabbedPane tabbedPane;

    private JFrame frame;

    private BasicInfoService basicInfoService;

    private final Runnable handleLogout;

    private final List<ChangeableGui> tabs = new ArrayList<>();

    public LoggedUserContent(JFrame frame, ProductService productService, OrderService orderService, SferaOrderService sferaOrderService, BasicInfoService basicInfoService, Runnable handleLogout) {

        this.frame = frame;
        this.basicInfoService = basicInfoService;
        this.handleLogout = handleLogout;

        ProductsGui productsGui = new ProductsGui(productService, handleLogout);
        OrdersGui ordersGui = new OrdersGui(orderService, sferaOrderService, handleLogout);

        tabs.add(ordersGui);
        tabs.add(productsGui);

        tabbedPane.addTab("Zamówienia", ordersGui.getMainPanel());
        tabbedPane.addTab("Produkty", productsGui.getMainPanel());

        tabbedPane.addChangeListener(l -> loadTab(tabbedPane.getSelectedIndex()));
    }

    private void loadTab(int tabIndex) {

        ChangeableGui tab = tabs.get(tabIndex);

        tab.load();
    }

    @Override
    public void load() {

        loadMenu();

        if (isLoaded()) {
            return;
        }

        super.load();

        loadTab(0);
    }

    private void loadMenu() {

        JMenuBar menuBar = new JMenuBar();

        JMenu accountMenu = new JMenu("Konto");

        JMenuItem basicInfoMenuItem = new JMenuItem("Podstawowe informacje");
        basicInfoMenuItem.addActionListener(e -> handleBasicInfo());

        JMenuItem accountMenuItem = new JMenuItem("Wyloguj");
        accountMenuItem.addActionListener(e -> handleLogout.run());

        accountMenu.add(basicInfoMenuItem);
        accountMenu.add(accountMenuItem);

        menuBar.add(accountMenu);

        frame.setJMenuBar(menuBar);
    }

    private void handleBasicInfo() {

        Optional<String> existingLocation = basicInfoService.getLocation();

        String gotLocation = JOptionPane.showInputDialog("Wprowadź nazwę miejcowości sprzedawcy", existingLocation.orElse(""));

        if (gotLocation == null) {
            return;
        }

        basicInfoService.setLocation(gotLocation);

        JOptionPane.showMessageDialog(null, "Zapisano dane", "Powiadomienie", JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public JPanel getMainPanel() {

        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        tabbedPane = new JTabbedPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(tabbedPane, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
